{"version":3,"sources":["components/Header/NameInput.js","components/Header/Header.js","dataStructures.js","assets/pokeball-transp.png","components/Ball.js","components/Pokemons.js","assets/redX.png","components/Results.js","components/CrimeLocation.js","components/CrimeCategories.js","components/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["NameInput","handleChange","e","setState","userName","target","value","handleSubmit","preventDefault","state","length","props","userInput","userNameTooSmall","name","className","htmlFor","onChange","this","type","id","placeholder","onClick","Component","Header","getUsername","isSubmit","getUser","cityCoordinates","crimeCategories","Ball","src","ball","alt","displayClass","Pokemons","getPokemons","successPokemonType","a","getPokemonsAPICall","successfulPokemon","setArrayOfSuccessPokemonObj","successfulArray","getFinalPokemonDisplayList","finalSuccessArray","setArrayOfWrongPokemonObj","unsuccessfulArray","finalUnsuccessfulArray","translateCoordsToCityName","combineArrays","succeesPokemonPromise","successArray","i","data","pokemon","getRandomIndex","pokemObject","push","unsuccessfulPokemonPromises","parseUnsuccessfulPokemonPromises","PokemonType","axios","method","url","dataResponse","element","poly","toString","location","cityName","unsuccessArray","finalArray","shuffle","console","log","displayPokemonList","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","pokemonArray","flag","requestPokemonArray","allPokeProperties","get","Promise","all","forEach","pokemonObj","onePokeProperties","pokeImage","abilities","abilityArray","ability","match","image","limit","index","PokemonPromises","unSuccessfulPokemonArray","handlePokemonSelect","selectedPokemonObject","handleGameFlag","pokemonList","successPokemonArray","unSuccessPokemonArray","crime","map","pokemonIndex","capitalizeFirstLetter","Results","resetGame","isSuccessfulFlag","chosenPokeName","chosenPokeImageUrl","redX","playAgain","CrimeLocation","onLocationChange","getLocation","place","CrimeCategories","handleCrime","getCrimeChange","crimeCategoriesArray","category","Home","getPokemonType","userSelectedCrime","successType","key","successfulType","getLocationChange","selectedLocation","selectedCrime","pokemonType","window","scrollTo","top","scrollToDiv","current","offsetTop","flagValue","isQuizzed","gameFlag","resultsSection","reset","string","charAt","toUpperCase","slice","React","createRef","crimeArray","Object","keys","ref","App","grabUsername","user","isNameSubmit","quizzed","username","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7c2e93d.chunk.js","sourcesContent":["import { Component } from \"react\";\nclass NameInput extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: \"\",\n      userNameTooSmall: false\n    };\n  }\n\n// Function to store user's name input \n  handleChange = (e) => {\n    this.setState({\n      userName: e.target.value,\n    });\n  };\n\n//Function to handle input submission \n//Store the name in App.js state\n  handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (this.state.userName.length > 1) {\n      this.props.userInput(this.state.userName, true);\n      this.setState({\n        userNameTooSmall: false\n      })\n    } else {\n      // \n      \n      this.setState({\n        userNameTooSmall: true\n      })\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form name=\"userName\" className=\"userNameForm\">\n          <label htmlFor=\"nameInput\">\n            Your name:\n            {/* <Ball displayClass=\"ball\" /> */}\n          </label>\n          <input\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"nameInput\"\n            id=\"nameInput\"\n            placeholder=\"Your name here\"\n          />\n\n          <button className=\"nameButton\" onClick={this.handleSubmit}>\n            Submit\n          </button>\n        </form>\n\n        {this.state.userNameTooSmall ? \n        <p className=\"charWarning\"><span className=\"charWarningText\">Please enter at least 2 characters for your username</span> 🙃 </p>\n        : null }\n\n      </>\n    );\n  }\n}\n\nexport default NameInput;\n","import { Component } from \"react\";\nimport NameInput from \"./NameInput.js\";\n\nclass Header extends Component {\n  getUsername = (name, isSubmit) => {\n    this.props.getUser(name, isSubmit);\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <div className=\"wrapper\">\n            {/* Game rules  */}\n            <article className=\"introText\">\n              <p>\n                It is dark times out there. In this new world, Pokémons come to\n                rescue and support the UK law enforcement.\n              </p>\n              <p>\n                Pick a Pokemon that is best suited to help you solve a crime.\n                Each pokemon has different abilities that can help them solve\n                different categories of crime.\n              </p>\n            </article>\n\n            {/* Component to accept user's name  */}\n            <NameInput userInput={this.getUsername} />\n          </div>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","// we borrowed some of this stuff from the good folks here: https://github.com/heathergh/detective-pokemon\n\nexport const cityCoordinates = [\n  {\n    \"name\":\"London\",\n    \"poly\":\"51.47589,-0.15156:51.47589,-0.10156:51.52589,-0.10156:51.52589,-0.15156\"\n  },\n  {\n    \"name\":\"Birmingham\",\n    \"poly\":\"52.43391,-1.942301:52.43391,-1.842301:52.53391,-1.842301:52.53391,-1.942301\"\n  },\n  {\n    \"name\":\"Liverpool\",\n    \"poly\":\"53.35585,-3.035683:53.35585,-2.935683:53.45585,-2.935683:53.45585,-3.035683\"\n  },\n  {\n    \"name\":\"Nottingham\",\n    \"poly\":\"52.904,-1.290101:52.904,-1.190101:53.004,-1.190101:53.004,-1.290101\"\n  },\n  {\n    \"name\":\"Sheffield\",\n    \"poly\":\"53.34563,-1.689539:53.34563,-1.589539:53.44563,-1.589539:53.44563,-1.689539\"\n  }\n]\n\nexport const crimeCategories = {\n  \"anti-social-behaviour\" : { \n    \"readableCrimeName\": \"antisocial behaviour\",\n    \"successfulType\": 14,\n    \"typeName\": \"psychic\",\n    \"reason\": \"Psychic pokemon are able to read and calm minds!\"\n  },\n  \"bicycle-theft\" : { \n    \"readableCrimeName\": \"bicycle theft\",\n    \"successfulType\": 3,\n    \"typeName\": \"flying\",\n    \"reason\": \"Flying pokemon are able to fly and track the thief!\"\n  },\n  \"burglary\" : { \n    \"readableCrimeName\": \"burglary\",\n    \"successfulType\": 2,\n    \"typeName\": \"fighting\",\n    \"reason\": \"Fighting pokemon are able to beat the burglar in close quarter combat!\"\n  },\n  \"criminal-damage-arson\" : { \n    \"readableCrimeName\": \"criminal damage or arson\",\n    \"successfulType\": 11,\n    \"typeName\": \"water\",\n    \"reason\": \"Water pokemon can put out the fire!\"\n  },\n  \"drugs\" : { \n    \"readableCrimeName\": \"drugs\",\n    \"successfulType\": 4,\n    \"typeName\": \"poison\",\n    \"reason\": \"Poison pokemon can detect drugs and create antidotes!\"\n  },\n  \"possession-of-weapons\" : { \n    \"readableCrimeName\": \"possession of weapons\",\n    \"successfulType\": 8,\n    \"typeName\": \"ghost\",\n    \"reason\": \"Ghost pokemon can't be hurt by corporeal weapons!\"\n  },\n  \"public-order\" : { \n    \"readableCrimeName\": \"public order\",\n    \"successfulType\": 12,\n    \"typeName\": \"grass\",\n    \"reason\": \"Grass pokemon can put people to sleep!\"\n  },\n  \"robbery\" : { \n    \"readableCrimeName\": \"robbery\",\n    \"successfulType\": 13,\n    \"typeName\": \"electric\",\n    \"reason\": \"Electric pokemon can stun the assailant!\"\n  },\n  \"shoplifting\" : { \n    \"readableCrimeName\": \"shoplifting\",\n    \"successfulType\": 15,\n    \"typeName\": \"ice\",\n    \"reason\": \"Ice pokemon can freeze the shoplifter in place!\"\n  },\n  \"theft-from-the-person\" : { \n    \"readableCrimeName\": \"theft from a person\",\n    \"successfulType\": 1,\n    \"typeName\": \"normal\",\n    \"reason\": \"Normal pokemon can stop theft from the person!\"\n  },\n  \"vehicle-crime\" : { \n    \"readableCrimeName\": \"vehicle crime\",\n    \"successfulType\": 16,\n    \"typeName\": \"dragon\",\n    \"reason\": \"Dragon pokemon can fly and stop a car!\"\n  },\n  \"violent-crime\" : { \n    \"readableCrimeName\": \"violent crime\",\n    \"successfulType\": 18,\n    \"typeName\": \"fairy\",\n    \"reason\": \"Fairy pokemon can turn any cruel person into a nice one!\"\n  }\n}","export default __webpack_public_path__ + \"static/media/pokeball-transp.6dabce4f.png\";","import ball from \"../assets/pokeball-transp.png\";\n//importing PokemonGo logo\nconst Ball = (props) => {\n  return (\n    <div className=\"loadingContainer\">\n      <h3>Loading...</h3>\n      <img\n        src={ball}\n        alt=\"The PokemonGo logo\"\n        className={`pokemonBall loading ${props.displayClass}`}\n      />\n    </div>\n  );\n};\n\nexport default Ball;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { cityCoordinates } from \"../dataStructures.js\";\nimport Ball from \"./Ball.js\";\n\nclass Pokemons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      displayPokemonList: [],\n      pokemonList: [],\n      successPokemonArray: [],\n      unSuccessPokemonArray: [],\n      cityName: \"city\",\n    };\n  }\n\n  componentDidMount() {\n    //Make a function call to get a list of 5 pokemons\n    this.getPokemons(this.props.successPokemonType);\n  }\n\n  getPokemons = async (successPokemonType) => {\n    // RIGHT ANSWERS API CALL\n    //Make an API call to get a list of Pokemons for Successful Pokemon Type\n    //Store the top result in the displayPokemons List\n\n    let successfulPokemon = await this.getPokemonsAPICall(successPokemonType);\n\n    const successfulArray = await this.setArrayOfSuccessPokemonObj(\n      successfulPokemon\n    );\n    const finalSuccessArray = await this.getFinalPokemonDisplayList(\n      successfulArray,\n      \"correct\"\n    );\n    const unsuccessfulArray = await this.setArrayOfWrongPokemonObj();\n\n    const finalUnsuccessfulArray = await this.getFinalPokemonDisplayList(\n      unsuccessfulArray,\n      \"wrong\"\n    );\n\n    //Get the selected City\n    this.translateCoordsToCityName();\n\n    // Combine the correct and wrong pokemons to get a final display list\n    this.combineArrays(finalSuccessArray, finalUnsuccessfulArray);\n  };\n\n  //Function to store 10 success pokemons from the Promise Object\n  setArrayOfSuccessPokemonObj = async (succeesPokemonPromise) => {\n    let successArray = [];\n    for (let i = 0; i < 10; i++) {\n      let pokemObject = await succeesPokemonPromise.data.pokemon[\n        this.getRandomIndex(20)\n      ].pokemon;\n      successArray.push(pokemObject);\n    }\n\n    return successArray;\n  };\n\n  //Function to store 10 wrong pokemons from the Promise Object\n  setArrayOfWrongPokemonObj = async () => {\n    // WRONG ANSWERS API CALL\n    //Make an API call to get random pokemon of different types\n    let unsuccessfulPokemonPromises = [];\n    for (let i = 0; i < 10; i++) {\n      unsuccessfulPokemonPromises[i] = await this.getPokemonsAPICall(\n        this.getRandomIndex(17)\n      );\n    }\n    //Parse this promise array to create a list of unsuccessful pokemons\n    const unsuccessfulArray = this.parseUnsuccessfulPokemonPromises(\n      unsuccessfulPokemonPromises\n    );\n\n    return unsuccessfulArray;\n  };\n\n  //Function to make an API to get the pokemon types\n  getPokemonsAPICall = (PokemonType) => {\n    return axios({\n      method: \"GET\",\n      url: `https://pokeapi.co/api/v2/type/${PokemonType}`,\n      dataResponse: \"json\",\n    });\n  };\n\n  //Function to get the selected city\n  translateCoordsToCityName = () => {\n    for (const element of cityCoordinates) {\n      if (element.poly.toString() === this.props.location.toString()) {\n        this.setState({\n          cityName: element.name,\n        });\n      }\n    }\n  };\n\n  //Function to combine the correct and wrong pokemons to get a final display list\n  combineArrays = (successArray, unsuccessArray) => {\n    let finalArray = [];\n\n    finalArray.push(successArray[0]);\n    for (let i = 0; i < 4; i++) {\n      finalArray.push(unsuccessArray[i]);\n    }\n\n    this.shuffle(finalArray);\n    console.log(finalArray);\n    this.setState({\n      displayPokemonList: finalArray,\n    });\n  };\n\n  // Fisher-Yates to shuffle the final array everytime before displaying\n  shuffle = (array) => {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n\n  //Function to make an API call to each pokemon endpoint to get the pokemon details(like abilities, image, name etc)\n  getFinalPokemonDisplayList = async (pokemonArray, flag) => {\n    let requestPokemonArray = [];\n    let allPokeProperties = [];\n    //Create an array of axios calls\n    for (let i = 0; i < pokemonArray.length; i++) {\n      requestPokemonArray.push(axios.get(pokemonArray[i].url));\n    }\n\n    //promise.all to get all the pokemon properties\n    const resultPokemonObject = await Promise.all([...requestPokemonArray]);\n\n    resultPokemonObject.forEach((pokemonObj) => {\n      let onePokeProperties = {};\n      //Pokemon image\n      const pokeImage =\n        pokemonObj[`data`][`sprites`][`other`][`official-artwork`][\n          `front_default`\n        ];\n\n      if (pokeImage !== null) {\n        const abilities = pokemonObj[`data`][`abilities`];\n\n        let abilityArray = [];\n        //Pokemon abilites\n        abilities.forEach((ability) => {\n          abilityArray.push(ability.ability.name);\n        });\n\n        //Pokemon Name\n        const pokeName = pokemonObj[`data`][`name`];\n\n        //Create an object with all the pokemon properties\n        onePokeProperties = {\n          name: pokeName,\n          abilities: abilityArray,\n          id: pokemonObj[`data`][`id`],\n          match: flag,\n          image: pokeImage,\n        };\n        // Push the objects in to an array\n        allPokeProperties.push(onePokeProperties);\n      }\n    });\n    return allPokeProperties;\n  };\n\n  //Function that returns a random index\n  getRandomIndex = (limit) => {\n    const index = Math.floor(Math.random() * limit);\n    // If the returned index is 0 make it 1\n    return index === 0 ? index + 1 : index;\n  };\n\n  //Function to parse a list of wrong pokemon promises\n  parseUnsuccessfulPokemonPromises = (PokemonPromises) => {\n    let unSuccessfulPokemonArray = [];\n    for (let i = 0; i < PokemonPromises.length; i++) {\n      let pokemObject =\n        PokemonPromises[i].data.pokemon[\n          this.getRandomIndex(PokemonPromises[i].data.pokemon.length)\n        ].pokemon;\n\n      pokemObject.match = \"fail\";\n\n      unSuccessfulPokemonArray.push(pokemObject);\n    }\n\n    return unSuccessfulPokemonArray;\n  };\n\n  //Function to handle the user's pokemon selection\n  handlePokemonSelect = (selectedPokemonObject) => {\n    console.log(selectedPokemonObject);\n    if (selectedPokemonObject.match === \"correct\") {\n      this.props.handleGameFlag(\n        true,\n        selectedPokemonObject.name,\n        selectedPokemonObject.image\n      );\n    } else if (selectedPokemonObject.match === \"wrong\") {\n      this.props.handleGameFlag(\n        false,\n        selectedPokemonObject.name,\n        selectedPokemonObject.image\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.displayPokemonList.length !== 0 ? (\n          <>\n            <div className=\"quizMessage\">\n              <p>\n                {\" \"}\n                You are in{\" \"}\n                <span className=\"chosenCity\">{this.state.cityName}</span>,\n                trying to solve a{\" \"}\n                <span className=\"chosenCrime\">{this.props.crime}</span> crime.\n              </p>\n            </div>\n\n            <div className=\"chooseYourFighter\">\n              <p>Choose a Pokemon to help you solve the case:</p>\n            </div>\n\n            <div className=\"options\">\n              {/* DISPLAY LIST OF POKEMON OPTIONS */}\n              {this.state.displayPokemonList\n                ? this.state.displayPokemonList.map((pokemon, pokemonIndex) => {\n                    return (\n                      <article\n                        className=\"pokeDisplay\"\n                        key={`${pokemonIndex}${pokemon.name}`}\n                        onClick={() => {\n                          this.handlePokemonSelect(pokemon);\n                        }}\n                      >\n                        <p>{this.props.capitalizeFirstLetter(pokemon.name)}</p>\n\n                        <img\n                          src={pokemon.image}\n                          alt={pokemon.name}\n                          key={pokemon.name}\n                        />\n\n                        <ul>\n                          {pokemon.abilities.map((ability, index) => {\n                            return (\n                              <li key={`${ability}${index}`}>{ability}</li>\n                            );\n                          })}\n                        </ul>\n                      </article>\n                    );\n                  })\n                : null}\n            </div>\n          </>\n        ) : (\n          <>\n            <Ball />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Pokemons;\n","export default __webpack_public_path__ + \"static/media/redX.47be6cd2.png\";","import React, { Component } from \"react\";\nimport redX from \"../assets/redX.png\";\n\nclass Results extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  resetGame = (flag) => {\n    this.props.resetGame(\"\");\n    console.log(\"reset\");\n  };\n\n  render() {\n    // If the flag is not set, do not display results\n    //Otherwise display appropriate results\n    if (this.props.isSuccessfulFlag === \"\") {\n      return null;\n    } else if (this.props.isSuccessfulFlag === false) {\n      return (\n        //success message\n        <div className=\"resultsSection\">\n          <h3>DANG, {this.props.userName}...</h3>\n\n          <p>\n            <span className=\"resultPokeName\">\n              {this.props.capitalizeFirstLetter(this.props.chosenPokeName)}\n            </span>{\" \"}\n            was not able to solve the crime!!{\" \"}\n          </p>\n\n          <div className=\"resultsImagesDiv loser\">\n            <img\n              src={this.props.chosenPokeImageUrl}\n              alt={this.props.userName}\n            />\n            <img src={redX} alt=\"a red X\" className=\"redX\" />\n          </div>\n          {/* options for game restart and play again */}\n\n          <div className=\"gameButtons\">\n            <button className=\"again\" onClick={this.props.playAgain}>\n              Play again\n            </button>\n            <button className=\"again\" onClick={this.resetGame}>\n              Game restart\n            </button>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        //failure message\n        <div className=\"resultsSection\">\n          <h3>OKAYY {this.props.userName}!</h3>\n\n          <p>\n            Great job!{\" \"}\n            <span className=\"resultPokeName\">\n              {this.props.capitalizeFirstLetter(this.props.chosenPokeName)}\n            </span>{\" \"}\n            solved the crime!{\" \"}\n          </p>\n\n          <div className=\"resultsImagesDiv winner\">\n            <img\n              src={this.props.chosenPokeImageUrl}\n              alt={this.props.userName}\n            />\n          </div>\n          {/* options for game restart and play again */}\n          <div className=\"gameButtons\">\n            <button className=\"again\" onClick={this.props.playAgain}>\n              Play again\n            </button>\n            <button className=\"again\" onClick={this.resetGame}>\n              Game restart\n            </button>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Results;\n","import { Component } from \"react\";\nimport { cityCoordinates } from \"../dataStructures.js\";\n\nclass CrimeLocation extends Component {\n  //Function to store user's selected location in the parent component's state\n  onLocationChange = (e) => {\n    this.props.getLocation(e.target.value);\n  };\n\n  //Display the list of locations in the UK(Data retrieved from UK police API)\n  render() {\n    return (\n      <select onChange={this.onLocationChange}>\n        <option value=\"none\">Choose location</option>\n        {cityCoordinates.map((place) => {\n          return (\n            <option key={place.poly} value={place.poly}>\n              {place.name}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nexport default CrimeLocation;\n","import { Component } from \"react\";\n\nclass CrimeCategories extends Component {\n  //Function to store the user selected Crime category in the parent component's state\n  handleCrime = (e) => {\n    this.props.getCrimeChange(e.target.value);\n  };\n\n  //Renders all the crime categories. These categories where retrieved from UK Police API\n  render() {\n    return (\n      <select onChange={this.handleCrime}>\n        <option value=\"none\">Choose crime</option>\n        {this.props.crimeCategoriesArray.map((category, index) => {\n          return (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nexport default CrimeCategories;\n","import React, { Component } from \"react\";\nimport { crimeCategories } from \"../dataStructures.js\";\nimport Pokemons from \"./Pokemons.js\";\nimport Results from \"./Results.js\";\nimport CrimeLocation from \"./CrimeLocation.js\";\nimport CrimeCategories from \"./CrimeCategories.js\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.scrollToDiv = React.createRef();\n    this.resultsSection = React.createRef();\n    this.state = {\n      crimeCategories: [],\n      selectedCrime: \"\",\n      selectedLocation: \"\",\n      successPokemonType: \"\",\n      gameFlag: \"\",\n      chosenPokeName: \"\",\n      chosenPokeImageUrl: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // store each properties in an array\n    const crimeArray = Object.keys(crimeCategories);\n\n    this.setState({\n      crimeCategories: crimeArray,\n    });\n  }\n\n  //Function to get success Pokemon Type based on the selected Crime Category\n  getPokemonType = (userSelectedCrime) => {\n    let successType;\n    for (const key in crimeCategories) {\n      if (key === userSelectedCrime) {\n        successType = crimeCategories[key].successfulType;\n      }\n    }\n\n    return successType;\n  };\n\n  //Function to set the user's selected Location\n  getLocationChange = (selectedLocation) => {\n    this.setState({\n      selectedLocation: selectedLocation,\n    });\n  };\n\n  //Function to set the user's selected Crime Category\n  handleCrime = (selectedCrime) => {\n    this.setState({\n      selectedCrime: selectedCrime,\n    });\n  };\n\n  // Function to handle submit once user has selected the location and crime\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //Get the success Pokemon Type and set it in State\n    const pokemonType = this.getPokemonType(this.state.selectedCrime);\n    this.setState(\n      {\n        successPokemonType: pokemonType,\n      },\n      () => {\n        window.scrollTo({\n          top: this.scrollToDiv.current.offsetTop,\n        });\n      }\n    );\n  };\n\n  //Function to store the game(win/lose) flag\n  handleGameFlag = (flagValue, chosenPokeName, chosenPokeImageUrl) => {\n    this.props.isQuizzed(flagValue);\n    this.setState(\n      {\n        gameFlag: flagValue,\n        chosenPokeName: chosenPokeName,\n        chosenPokeImageUrl: chosenPokeImageUrl,\n      },\n      () => {\n        window.scrollTo({\n          top: this.resultsSection.current.offsetTop,\n        });\n      }\n    );\n  };\n\n  resetGame = (flag) => {\n    this.props.reset();\n    console.log(flag);\n  };\n\n  playAgain = () => {\n    this.setState({\n      gameFlag: \"\",\n    });\n  };\n  capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  render() {\n    return (\n      <main>\n        <div className=\"wrapper\">\n          <div>\n            <form name=\"dropdownForm\">\n              {/* if selected location not equal to ''\n                    then show CrimeCategories dropdown and submit button */}\n              <CrimeLocation getLocation={this.getLocationChange} />\n\n              {this.state.selectedLocation !== \"\" ? (\n                <>\n                  <CrimeCategories\n                    getCrimeChange={this.handleCrime}\n                    crimeCategoriesArray={this.state.crimeCategories}\n                  />\n\n                  <button className=\"dropdownForm\" onClick={this.handleSubmit}>\n                    Submit\n                  </button>\n                </>\n              ) : null}\n            </form>\n            {this.state.gameFlag === \"\" ? (\n              // {/* DISPLAY ALL QUIZ STUFF */}\n              <div ref={this.scrollToDiv}>\n                {this.state.successPokemonType ? (\n                  <Pokemons\n                    key={this.state.successPokemonType}\n                    crime={this.state.selectedCrime}\n                    successPokemonType={this.state.successPokemonType}\n                    location={this.state.selectedLocation}\n                    handleGameFlag={this.handleGameFlag}\n                    capitalizeFirstLetter={this.capitalizeFirstLetter}\n                  />\n                ) : null}\n              </div>\n            ) : null}\n          </div>\n          {/* Display the results page      */}\n          <div ref={this.resultsSection}>\n            <Results\n              key={this.state.gameFlag}\n              isSuccessfulFlag={this.state.gameFlag}\n              userName={this.props.userName}\n              chosenPokeName={this.state.chosenPokeName}\n              chosenPokeImageUrl={this.state.chosenPokeImageUrl}\n              selectedCrime={this.state.selectedCrime}\n              capitalizeFirstLetter={this.capitalizeFirstLetter}\n              resetGame={this.resetGame}\n              playAgain={this.playAgain}\n            />\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Home;\n","import { Component } from \"react\";\nimport \"../App.scss\";\nimport Header from \"./Header/Header.js\";\nimport Home from \"./Home.js\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: \"\",\n      isNameSubmit: false,\n      quizzed: \"\",\n    };\n  }\n\n  grabUsername = (name, isSubmit) => {\n    this.setState({\n      user: name,\n      isNameSubmit: isSubmit,\n    });\n  };\n\n  isQuizzed = (quizzed) => {\n    this.setState({\n      quizzed: quizzed,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isNameSubmit: false,\n      user: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"content\">\n          <div className=\"wrapper\">\n            <h1>Detective Pokémon</h1>\n          </div>\n          {!this.state.isNameSubmit ? (\n            <Header getUser={this.grabUsername} username={this.state.user} />\n          ) : null}\n\n          <div className=\"wrapper greeting\">\n            {this.state.user.length >= 2 && this.state.quizzed === \"\" ? (\n              <>\n                <p>\n                  Thank you <span> {this.state.user} </span> for joining this\n                  fight with us!\n                </p>\n                <p>\n                  Please pick a city and the category of crime that you will\n                  help to solve.\n                </p>\n              </>\n            ) : null}\n          </div>\n\n          {this.state.user.length >= 2 ? (\n            <Home\n              userName={this.state.user}\n              isQuizzed={this.isQuizzed}\n              reset={this.reset}\n            />\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}